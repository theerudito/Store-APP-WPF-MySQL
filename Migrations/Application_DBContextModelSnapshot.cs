// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Store.DB_Context;

namespace Store.Migrations
{
    [DbContext(typeof(Application_DBContext))]
    partial class Application_DBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.32")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Store.Models.MCart", b =>
                {
                    b.Property<int>("IdCart")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("IdClient")
                        .HasColumnType("int");

                    b.Property<int>("IdProduct")
                        .HasColumnType("int");

                    b.Property<float>("P_Total")
                        .HasColumnType("float");

                    b.HasKey("IdCart");

                    b.ToTable("Cart");
                });

            modelBuilder.Entity("Store.Models.MClient", b =>
                {
                    b.Property<int>("IdClient")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("City")
                        .HasColumnType("text");

                    b.Property<string>("DNI")
                        .HasColumnType("text");

                    b.Property<string>("Direction")
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<string>("FirstName")
                        .HasColumnType("text");

                    b.Property<string>("LastName")
                        .HasColumnType("text");

                    b.Property<string>("Phone")
                        .HasColumnType("text");

                    b.Property<DateTime>("created_at")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("updated_at")
                        .HasColumnType("datetime");

                    b.HasKey("IdClient");

                    b.ToTable("Clients");
                });

            modelBuilder.Entity("Store.Models.MDetailsCart", b =>
                {
                    b.Property<int>("IdDetailCart")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Date_Now")
                        .HasColumnType("text");

                    b.Property<string>("Hour_Now")
                        .HasColumnType("text");

                    b.Property<int>("IdCart")
                        .HasColumnType("int");

                    b.Property<float>("IvaTotal")
                        .HasColumnType("float");

                    b.Property<float>("SubTotal0")
                        .HasColumnType("float");

                    b.Property<float>("Subtotal")
                        .HasColumnType("float");

                    b.Property<float>("Subtotal12")
                        .HasColumnType("float");

                    b.Property<float>("Total")
                        .HasColumnType("float");

                    b.Property<DateTime>("created_at")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("updated_at")
                        .HasColumnType("datetime");

                    b.HasKey("IdDetailCart");

                    b.ToTable("DetailsCart");
                });

            modelBuilder.Entity("Store.Models.MProduct", b =>
                {
                    b.Property<int>("IdProduct")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Brand")
                        .HasColumnType("text");

                    b.Property<string>("CodeProduct")
                        .HasColumnType("text");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("Image_Product")
                        .HasColumnType("text");

                    b.Property<string>("NameProduct")
                        .HasColumnType("text");

                    b.Property<float>("P_Total")
                        .HasColumnType("float");

                    b.Property<float>("P_Unitary")
                        .HasColumnType("float");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<DateTime>("created_at")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("updated_at")
                        .HasColumnType("datetime");

                    b.HasKey("IdProduct");

                    b.ToTable("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
